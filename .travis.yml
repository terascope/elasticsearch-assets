# set the dist to bionic
dist: focal
language: node_js
branches:
  only:
    - master
    - /^v\d+\.\d+\.\d+/
addons:
  apt:
    packages:
      - jq
if: NOT (branch = master AND type = push AND tag IS blank AND os = osx)
cache:
  npm: false
  yarn: false
services:
  - docker

jobs:
  include:
    - stage: 'Tests'
      name: 'ES ASSET Legacy Client (elasticsearch 6) (node 14.21.3)'
      node_js: '14.21.3'
      # run only on pull-requests
      if: branch = master AND type IN (pull_request, cron) AND commit_message !~ /^WIP/
      script: yarn --silent test:legacy  --report-coverage false

    - name: 'ES ASSET Client (elasticsearch 6) (node 14.21.3)'
      node_js: '14.21.3'
      # run only on pull-requests
      if: branch = master AND type IN (pull_request, cron) AND commit_message !~ /^WIP/
      script: yarn --silent test:6  --report-coverage false

    - name: 'ES ASSET Client (elasticsearch 7) (node 14.21.3)'
      node_js: '14.21.3'
      # run only on pull-requests
      if: branch = master AND type IN (pull_request, cron) AND commit_message !~ /^WIP/
      script: yarn --silent test:7  --report-coverage false

    - name: 'ES ASSET Opensearch (opensearch 1.3.0) (node 14.21.3)'
      node_js: '14.21.3'
      # run only on pull-requests
      if: branch = master AND type IN (pull_request, cron) AND commit_message !~ /^WIP/
      script: yarn --silent test:opensearch  --report-coverage false; teraslice-cli assets build --bundle-target node14

    - name: 'ES ASSET Client (elasticsearch 6) (node 16.19.1)'
      node_js: '16.19.1'
      # run only on pull-requests
      if: branch = master AND type IN (pull_request, cron) AND commit_message !~ /^WIP/
      script: yarn --silent test:6  --report-coverage false

    - name: 'ES ASSET Client (elasticsearch 7) (node 16.19.1)'
      node_js: '16.19.1'
      # run only on pull-requests
      if: branch = master AND type IN (pull_request, cron) AND commit_message !~ /^WIP/
      script: yarn --silent test:7  --report-coverage false

    - name: 'ES ASSET Opensearch (opensearch 1.3.0) (node 16.19.1)'
      node_js: '16.19.1'
      # run only on pull-requests
      if: branch = master AND type IN (pull_request, cron) AND commit_message !~ /^WIP/
      script: yarn --silent test:opensearch  --report-coverage false; teraslice-cli assets build --bundle-target node16

    - name: 'ES ASSET Client (elasticsearch 6) (node 18.16.0)'
      node_js: '18.16.0'
      # run only on pull-requests
      if: branch = master AND type IN (pull_request, cron) AND commit_message !~ /^WIP/
      script: yarn --silent test:6  --report-coverage false

    - name: 'ES ASSET Client (elasticsearch 7) (node 18.16.0)'
      node_js: '18.16.0'
      # run only on pull-requests
      if: branch = master AND type IN (pull_request, cron) AND commit_message !~ /^WIP/
      script: yarn --silent test:7  --report-coverage false

    - name: 'ES ASSET Opensearch (opensearch 1.3.0) (node 18.16.0)'
      node_js: '18.16.0'
      # run only on pull-requests
      if: branch = master AND type IN (pull_request, cron) AND commit_message !~ /^WIP/
      script: yarn --silent test:opensearch  --report-coverage false; teraslice-cli assets build --bundle-target node18

    - name: 'osx testing (opensearch 1.3.0) (node 18.16.0)'
      node_js: '18.16.0'
      os: 'osx'
      osx_image: xcode12
      # run only on pull-requests
      if: branch = master AND type IN (pull_request, cron) AND commit_message !~ /^WIP/
      script: yarn --silent test:opensearch  --report-coverage false

before_install:
  # Install latest yarn
  - npm install --global yarn
  - export PATH="$HOME/.yarn/bin:$PATH"
before_script:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin;
    else
    echo "* skipping docker login for macos...";
    fi
  - yarn build
  - yarn global add teraslice-cli
script:
  - yarn lint
  - teraslice-cli -v
after_success:
  - bash <(curl -s https://codecov.io/bash)
before_deploy:
  - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
deploy:
  - provider: script
    skip_cleanup: true
    script: yarn publish:changed
    on:
      tags: true
      condition: $TRAVIS_OS_NAME = linux
  - provider: releases
    api_key: $GITHUB_TOKEN
    prerelease: true
    file_glob: true
    file: build/*.zip
    skip_cleanup: true
    on:
      tags: true
